# Builder
FROM node:18-alpine AS builder
RUN apk add --no-cache libc6-compat 
RUN apk update
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --scope=life-logger --docker

# Installer
# Add lockfile and package.json's of isolated subworkspace
FROM node:18-alpine AS installer
# The ethereum npm package requires git
RUN apk add --no-cache libc6-compat git build-base python3
RUN apk update
WORKDIR /app
RUN npm install -g pnpm@7.26.0

COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.json
#RUN pnpm fetch

COPY .gitignore .gitignore
COPY .npmrc .npmrc
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/pnpm-workspace.yaml ./pnpm-workspace.yaml
RUN pnpm install

# Copy out src now.
COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json
RUN pnpm run build --filter=life-logger

COPY scripts/trace-file.mjs scripts/trace-file.mjs
RUN node scripts/trace-file.mjs --file=apps/life-logger/src/server.js --outDir=out/ --rootDir=apps/life-logger/


# RUN pnpm prune --prod

# Runner
FROM node:18-alpine as runner
RUN apk add --no-cache libc6-compat 
RUN apk update
WORKDIR /app

COPY --from=installer /app/out .
# Install lmdb â€” vercel/nft doesn't like this.
RUN cd ../ && mkdir temp && cd temp && npm install lmdb && cp -r node_modules/* /app/node_modules/ && cd /app

COPY --from=installer /app/apps/life-logger/dist ./dist
# COPY --from=installer /app/apps/life-logger/package.json .
# COPY --from=installer /app/apps/life-logger/src/server.js ./src/server.js
# COPY --from=installer /app/apps/life-logger/node_modules ./node_modules

# Ensure it's installed already
RUN npx --yes tsx --help
ENV NODE_ENV=production
EXPOSE 4000
CMD npx --yes tsx apps/life-logger/src/server.js
